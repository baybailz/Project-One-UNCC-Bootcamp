{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Which types of vehicles have the highest number of accidents and worst severity?\n",
    "\n",
    "#Is there a particular day of the week and time with a higher number of accidents? (Monday after 5 vs Friday after 5)\n",
    "\n",
    "#Does higher amount of horsepower correlate to higher risk of accidents?\n",
    "\n",
    "#How does age and sex affect risk of accident and severity? (could bin ages to inexperienced, moderately experienced, experienced, senior citizen)\n",
    "\n",
    "#Do bigger vehicles correlate to higher rate of casualties/severity? (Are motorcycles/mopeds more dangerous?)\n",
    "\n",
    "#Does purpose of trip affectt risk of accident?\n",
    "\n",
    "#Do lighting conditions (time of day) have an effect on accidents and severity? (daylight vs darkness)\n",
    "\n",
    "#Which type of vehicles maneuvers cause the most accidents? (see vehicle maneuver context csv)\n",
    "\n",
    "#How do different types of intersections effect risk of accident and severity?\n",
    "\n",
    "#Do older vehicles have any type of effect on accidents?\n",
    "\n",
    "# \n",
    "\n",
    "### top 5 locations for accidents - heatmaps \n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import os\n",
    "import glob\n",
    "from datetime import date\n",
    "from collections import defaultdict\n",
    "import seaborn as sns\n",
    "\n",
    "#main data source\n",
    "files = glob.glob('source/*.csv')\n",
    "#['source/Vehicles0515.csv',\n",
    "# 'source/Accidents0515.csv',\n",
    "# 'source/Casualties0515.csv']\n",
    "\n",
    "context_files = glob.glob('source/context/*.csv')\n",
    "#context_files\n",
    "\n",
    "#!pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "accident_severity = context_files[18]\n",
    "accident_severity = pd.read_csv(accident_severity)\n",
    "accident_severity = accident_severity.set_index('code')\n",
    "accident_severity\n",
    "type(accident_severity)\n",
    "accident_severity = accident_severity.rename(columns={'label': 'Category'})\n",
    "accident_severity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# accident Data set\n",
    "accident_set = pd.read_csv(files[1])\n",
    "#print(accident_set.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 1st clean\n",
    "accident_set = accident_set.dropna(axis=0, how='all')\n",
    "accident_set.head(3)\n",
    "accident_set = accident_set.dropna()\n",
    "accident_set.columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Vehicle Data set\n",
    "vehicle_s = pd.read_csv(files[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 1st clean\n",
    "vehicle_s = vehicle_s.drop_duplicates()\n",
    "vehicle_s = vehicle_s.dropna(axis=0, how='all')\n",
    "vehicle_s = vehicle_s.dropna(axis=1, how='any')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# show first 3 rows\n",
    "vehicle_s.head(14)\n",
    "vehicle_set = vehicle_s.drop(columns=['Towing_and_Articulation', 'Vehicle_Manoeuvre', 'Junction_Location',\n",
    "                                      'Vehicle_Location-Restricted_Lane', 'Junction_Location'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Accident_Index', 'Location_Easting_OSGR', 'Location_Northing_OSGR',\n",
       "       'Longitude', 'Latitude', 'Police_Force', 'Accident_Severity',\n",
       "       'Number_of_Vehicles', 'Number_of_Casualties', 'Date', 'Day_of_Week',\n",
       "       'Time', 'Local_Authority_(District)', 'Local_Authority_(Highway)',\n",
       "       '1st_Road_Class', '1st_Road_Number', 'Road_Type', 'Speed_limit',\n",
       "       'Junction_Detail', 'Junction_Control', '2nd_Road_Class',\n",
       "       '2nd_Road_Number', 'Pedestrian_Crossing-Human_Control',\n",
       "       'Pedestrian_Crossing-Physical_Facilities', 'Light_Conditions',\n",
       "       'Weather_Conditions', 'Road_Surface_Conditions',\n",
       "       'Special_Conditions_at_Site', 'Carriageway_Hazards',\n",
       "       'Urban_or_Rural_Area', 'Did_Police_Officer_Attend_Scene_of_Accident',\n",
       "       'LSOA_of_Accident_Location'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vehicle_set.head(2)\n",
    "accident_set.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Accident_Index', 'Vehicle_Reference', 'Vehicle_Type',\n",
       "       'Skidding_and_Overturning', 'Hit_Object_in_Carriageway',\n",
       "       'Vehicle_Leaving_Carriageway', 'Hit_Object_off_Carriageway',\n",
       "       '1st_Point_of_Impact', 'Was_Vehicle_Left_Hand_Drive?',\n",
       "       'Journey_Purpose_of_Driver', 'Sex_of_Driver', 'Age_of_Driver',\n",
       "       'Age_Band_of_Driver', 'Engine_Capacity_(CC)', 'Propulsion_Code',\n",
       "       'Age_of_Vehicle', 'Driver_IMD_Decile', 'Driver_Home_Area_Type',\n",
       "       'Location_Easting_OSGR', 'Location_Northing_OSGR', 'Longitude',\n",
       "       'Latitude', 'Police_Force', 'Accident_Severity', 'Number_of_Vehicles',\n",
       "       'Number_of_Casualties', 'Date', 'Day_of_Week', 'Time',\n",
       "       'Local_Authority_(District)', 'Local_Authority_(Highway)',\n",
       "       '1st_Road_Class', '1st_Road_Number', 'Road_Type', 'Speed_limit',\n",
       "       'Junction_Detail', 'Junction_Control', '2nd_Road_Class',\n",
       "       '2nd_Road_Number', 'Pedestrian_Crossing-Human_Control',\n",
       "       'Pedestrian_Crossing-Physical_Facilities', 'Light_Conditions',\n",
       "       'Weather_Conditions', 'Road_Surface_Conditions',\n",
       "       'Special_Conditions_at_Site', 'Carriageway_Hazards',\n",
       "       'Urban_or_Rural_Area', 'Did_Police_Officer_Attend_Scene_of_Accident',\n",
       "       'LSOA_of_Accident_Location'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Join accident and vehicle on Accident\n",
    "merge_set = pd.merge(vehicle_set,\n",
    "                    accident_set,\n",
    "                    on='Accident_Index', how= 'outer')\n",
    "merge_set.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Accident_Index', 'Vehicle_Reference', 'Casualty_Reference',\n",
       "       'Casualty_Class', 'Sex_of_Casualty', 'Age_of_Casualty',\n",
       "       'Age_Band_of_Casualty', 'Casualty_Severity', 'Pedestrian_Location',\n",
       "       'Pedestrian_Movement', 'Car_Passenger', 'Bus_or_Coach_Passenger',\n",
       "       'Pedestrian_Road_Maintenance_Worker', 'Casualty_Type',\n",
       "       'Casualty_Home_Area_Type'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "casualties = pd.read_csv(files[2])\n",
    "casualties = casualties.dropna(axis=0, how='all')\n",
    "casualties = casualties.drop(columns=['extra'])\n",
    "#casualties = casualties.set_index('Vehicle_Reference')\n",
    "casualties = casualties.drop_duplicates()\n",
    "casualties.head(3)\n",
    "casualties.columns\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Accident_Index', 'Location_Easting_OSGR', 'Location_Northing_OSGR',\n",
       "       'Longitude', 'Latitude', 'Police_Force', 'Accident_Severity',\n",
       "       'Number_of_Vehicles', 'Number_of_Casualties', 'Date', 'Day_of_Week',\n",
       "       'Time', 'Local_Authority_(District)', 'Local_Authority_(Highway)',\n",
       "       '1st_Road_Class', '1st_Road_Number', 'Road_Type', 'Speed_limit',\n",
       "       'Junction_Detail', 'Junction_Control', '2nd_Road_Class',\n",
       "       '2nd_Road_Number', 'Pedestrian_Crossing-Human_Control',\n",
       "       'Pedestrian_Crossing-Physical_Facilities', 'Light_Conditions',\n",
       "       'Weather_Conditions', 'Road_Surface_Conditions',\n",
       "       'Special_Conditions_at_Site', 'Carriageway_Hazards',\n",
       "       'Urban_or_Rural_Area', 'Did_Police_Officer_Attend_Scene_of_Accident',\n",
       "       'LSOA_of_Accident_Location', 'Vehicle_Reference', 'Casualty_Reference',\n",
       "       'Casualty_Class', 'Sex_of_Casualty', 'Age_of_Casualty',\n",
       "       'Age_Band_of_Casualty', 'Casualty_Severity', 'Pedestrian_Location',\n",
       "       'Pedestrian_Movement', 'Car_Passenger', 'Bus_or_Coach_Passenger',\n",
       "       'Pedestrian_Road_Maintenance_Worker', 'Casualty_Type',\n",
       "       'Casualty_Home_Area_Type'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accidentswcasualties = pd.merge(accident_set, casualties, \n",
    "                     on='Accident_Index', how= 'outer') #, #suffixes=[\"_L\", \"_R\"]\n",
    "accidentswcasualties.head(2)\n",
    "accidentswcasualties.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Accident_Index</th>\n",
       "      <th>Vehicle_Reference</th>\n",
       "      <th>Vehicle_Type</th>\n",
       "      <th>Skidding_and_Overturning</th>\n",
       "      <th>Hit_Object_in_Carriageway</th>\n",
       "      <th>Vehicle_Leaving_Carriageway</th>\n",
       "      <th>Hit_Object_off_Carriageway</th>\n",
       "      <th>1st_Point_of_Impact</th>\n",
       "      <th>Was_Vehicle_Left_Hand_Drive?</th>\n",
       "      <th>Journey_Purpose_of_Driver</th>\n",
       "      <th>...</th>\n",
       "      <th>Pedestrian_Crossing-Human_Control</th>\n",
       "      <th>Pedestrian_Crossing-Physical_Facilities</th>\n",
       "      <th>Light_Conditions</th>\n",
       "      <th>Weather_Conditions</th>\n",
       "      <th>Road_Surface_Conditions</th>\n",
       "      <th>Special_Conditions_at_Site</th>\n",
       "      <th>Carriageway_Hazards</th>\n",
       "      <th>Urban_or_Rural_Area</th>\n",
       "      <th>Did_Police_Officer_Attend_Scene_of_Accident</th>\n",
       "      <th>LSOA_of_Accident_Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>200501BS00001</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>200501BS00002</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>200501BS00003</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200501BS00003</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>200501BS00004</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>200501BS00005</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002863</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>200501BS00006</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>200501BS00006</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>200501BS00007</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>200501BS00007</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002875</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Accident_Index  Vehicle_Reference  Vehicle_Type  Skidding_and_Overturning  \\\n",
       "0  200501BS00001                  1             9                         0   \n",
       "1  200501BS00002                  1            11                         0   \n",
       "2  200501BS00003                  1            11                         0   \n",
       "3  200501BS00003                  2             9                         0   \n",
       "4  200501BS00004                  1             9                         0   \n",
       "5  200501BS00005                  1             3                         1   \n",
       "6  200501BS00006                  1             9                         0   \n",
       "7  200501BS00006                  2             3                         0   \n",
       "8  200501BS00007                  1             3                         0   \n",
       "9  200501BS00007                  2             9                         0   \n",
       "\n",
       "   Hit_Object_in_Carriageway  Vehicle_Leaving_Carriageway  \\\n",
       "0                          0                            0   \n",
       "1                          0                            0   \n",
       "2                          4                            0   \n",
       "3                          0                            0   \n",
       "4                          0                            0   \n",
       "5                         10                            0   \n",
       "6                          0                            0   \n",
       "7                          0                            0   \n",
       "8                          4                            0   \n",
       "9                          0                            0   \n",
       "\n",
       "   Hit_Object_off_Carriageway  1st_Point_of_Impact  \\\n",
       "0                           0                    1   \n",
       "1                           0                    4   \n",
       "2                           0                    4   \n",
       "3                           0                    3   \n",
       "4                           0                    1   \n",
       "5                           0                    1   \n",
       "6                           0                    0   \n",
       "7                           0                    0   \n",
       "8                           0                    1   \n",
       "9                           0                    2   \n",
       "\n",
       "   Was_Vehicle_Left_Hand_Drive?  Journey_Purpose_of_Driver  \\\n",
       "0                             1                         15   \n",
       "1                             1                          1   \n",
       "2                             1                          1   \n",
       "3                             1                         15   \n",
       "4                             1                         15   \n",
       "5                             1                         15   \n",
       "6                             1                         15   \n",
       "7                             1                         15   \n",
       "8                             1                         15   \n",
       "9                             1                         15   \n",
       "\n",
       "             ...              Pedestrian_Crossing-Human_Control  \\\n",
       "0            ...                                            0.0   \n",
       "1            ...                                            0.0   \n",
       "2            ...                                            0.0   \n",
       "3            ...                                            0.0   \n",
       "4            ...                                            0.0   \n",
       "5            ...                                            0.0   \n",
       "6            ...                                            0.0   \n",
       "7            ...                                            0.0   \n",
       "8            ...                                            0.0   \n",
       "9            ...                                            0.0   \n",
       "\n",
       "   Pedestrian_Crossing-Physical_Facilities  Light_Conditions  \\\n",
       "0                                      1.0               1.0   \n",
       "1                                      5.0               4.0   \n",
       "2                                      0.0               4.0   \n",
       "3                                      0.0               4.0   \n",
       "4                                      0.0               1.0   \n",
       "5                                      0.0               7.0   \n",
       "6                                      0.0               1.0   \n",
       "7                                      0.0               1.0   \n",
       "8                                      0.0               4.0   \n",
       "9                                      0.0               4.0   \n",
       "\n",
       "   Weather_Conditions  Road_Surface_Conditions  Special_Conditions_at_Site  \\\n",
       "0                 2.0                      2.0                         0.0   \n",
       "1                 1.0                      1.0                         0.0   \n",
       "2                 1.0                      1.0                         0.0   \n",
       "3                 1.0                      1.0                         0.0   \n",
       "4                 1.0                      1.0                         0.0   \n",
       "5                 1.0                      2.0                         0.0   \n",
       "6                 2.0                      2.0                         6.0   \n",
       "7                 2.0                      2.0                         6.0   \n",
       "8                 1.0                      1.0                         0.0   \n",
       "9                 1.0                      1.0                         0.0   \n",
       "\n",
       "   Carriageway_Hazards  Urban_or_Rural_Area  \\\n",
       "0                  0.0                  1.0   \n",
       "1                  0.0                  1.0   \n",
       "2                  0.0                  1.0   \n",
       "3                  0.0                  1.0   \n",
       "4                  0.0                  1.0   \n",
       "5                  0.0                  1.0   \n",
       "6                  0.0                  1.0   \n",
       "7                  0.0                  1.0   \n",
       "8                  0.0                  1.0   \n",
       "9                  0.0                  1.0   \n",
       "\n",
       "   Did_Police_Officer_Attend_Scene_of_Accident  LSOA_of_Accident_Location  \n",
       "0                                          1.0                  E01002849  \n",
       "1                                          1.0                  E01002909  \n",
       "2                                          1.0                  E01002857  \n",
       "3                                          1.0                  E01002857  \n",
       "4                                          1.0                  E01002840  \n",
       "5                                          1.0                  E01002863  \n",
       "6                                          1.0                  E01002832  \n",
       "7                                          1.0                  E01002832  \n",
       "8                                          1.0                  E01002875  \n",
       "9                                          1.0                  E01002875  \n",
       "\n",
       "[10 rows x 49 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# show first 10\n",
    "merge_set.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3262270, 49)\n",
      "(3262270, 18)\n",
      "(1651142, 32)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True     3041941\n",
       "False     220329\n",
       "Name: Accident_Index, dtype: int64"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#outer merging keeps common values in both left and right. Only rows with city should be return.  \n",
    "print(merge_set.shape)\n",
    "# (3262270, 53)\n",
    "print(vehicle_set.shape)\n",
    "# (3262270, 22)\n",
    "print(accident_set.shape)\n",
    "#(1780653, 32)\n",
    "# validate by checking the number of values in commomn \n",
    "merge_set.count()\n",
    "#combined_dat\n",
    "vehicle_set['Accident_Index'].isin(accident_set['Accident_Index']).value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "# assign vehicle types context \n",
    "vehicle_type = pd.read_csv(context_files[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'code'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3077\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3078\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3079\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mKeyError\u001b[0m: 'code'",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-40-b0e44c85a90f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# index will now be know as the code type that describes each vehicle\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mvehicle_type\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvehicle_type\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'code'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;31m#vehicle_type\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mset_index\u001b[0;34m(self, keys, drop, append, inplace, verify_integrity)\u001b[0m\n\u001b[1;32m   3907\u001b[0m                 \u001b[0mnames\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3908\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3909\u001b[0;31m                 \u001b[0mlevel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mframe\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3910\u001b[0m                 \u001b[0mnames\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3911\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mdrop\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   2686\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2687\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2688\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_column\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2689\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2690\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_getitem_column\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_getitem_column\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   2693\u001b[0m         \u001b[0;31m# get column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2694\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_unique\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2695\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_item_cache\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2696\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2697\u001b[0m         \u001b[0;31m# duplicate columns & possible reduce dimensionality\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_get_item_cache\u001b[0;34m(self, item)\u001b[0m\n\u001b[1;32m   2487\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcache\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2488\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mres\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2489\u001b[0;31m             \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2490\u001b[0m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_box_item_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2491\u001b[0m             \u001b[0mcache\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/internals.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(self, item, fastpath)\u001b[0m\n\u001b[1;32m   4113\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4114\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4115\u001b[0;31m                 \u001b[0mloc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4116\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4117\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3078\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3079\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3080\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_maybe_cast_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3081\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3082\u001b[0m         \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtolerance\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mKeyError\u001b[0m: 'code'"
     ]
    }
   ],
   "source": [
    "# index will now be know as the code type that describes each vehicle\n",
    "vehicle_type = vehicle_type.set_index('code')\n",
    "#vehicle_type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>label</th>\n",
       "      <th>Vehicle</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>code</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Pedal cycle</td>\n",
       "      <td>Pedal cycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Motorcycle 50cc and under</td>\n",
       "      <td>Motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Motorcycle 125cc and under</td>\n",
       "      <td>Motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Motorcycle over 125cc and up to 500cc</td>\n",
       "      <td>Motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Motorcycle over 500cc</td>\n",
       "      <td>Motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Taxi/Private hire car</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Minibus (8 - 16 passenger seats)</td>\n",
       "      <td>Bus</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Bus or coach (17 or more pass seats)</td>\n",
       "      <td>Bus</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Ridden horse</td>\n",
       "      <td>Ridden Horse</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Agricultural vehicle</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Tram</td>\n",
       "      <td>Other vehicle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Van / Goods 3.5 tonnes mgw or under</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Goods over 3.5t. and under 7.5t</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Goods 7.5 tonnes mgw and over</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Electric motorcycle</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>Other vehicle</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Motorcycle - unknown cc</td>\n",
       "      <td>Motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>-1</th>\n",
       "      <td>Data missing or out of range</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                      label              Vehicle\n",
       "code                                                            \n",
       " 1                              Pedal cycle          Pedal cycle\n",
       " 2                Motorcycle 50cc and under           Motorcycle\n",
       " 3               Motorcycle 125cc and under           Motorcycle\n",
       " 4    Motorcycle over 125cc and up to 500cc           Motorcycle\n",
       " 5                    Motorcycle over 500cc           Motorcycle\n",
       " 8                    Taxi/Private hire car                  Car\n",
       " 9                                      Car                  Car\n",
       " 10        Minibus (8 - 16 passenger seats)                  Bus\n",
       " 11    Bus or coach (17 or more pass seats)                  Bus\n",
       " 16                            Ridden horse         Ridden Horse\n",
       " 17                    Agricultural vehicle                  NaN\n",
       " 18                                    Tram        Other vehicle\n",
       " 19     Van / Goods 3.5 tonnes mgw or under        Goods_vehicle\n",
       " 20         Goods over 3.5t. and under 7.5t        Goods_vehicle\n",
       " 21           Goods 7.5 tonnes mgw and over        Goods_vehicle\n",
       " 22                        Mobility scooter     Mobility scooter\n",
       " 23                     Electric motorcycle  Electric motorcycle\n",
       " 90                           Other vehicle                  NaN\n",
       " 97                 Motorcycle - unknown cc           Motorcycle\n",
       " 98          Goods vehicle - unknown weight        Goods_vehicle\n",
       "-1             Data missing or out of range                  NaN"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vehicles = ['Car', 'Bus','Motorcycle', 'Pedal Cycle']\n",
    "vehicle_type.index\n",
    "#vehicle_type['Vehicle'] = 'Type'\n",
    "vehicle_type.loc[vehicle_type['label'].str.contains(\"ar\"), 'Vehicle' ] = 'Car'\n",
    "vehicle_type.loc[vehicle_type['label'].str.contains(\"us\"), 'Vehicle' ] = 'Bus'\n",
    "vehicle_type.loc[vehicle_type['label'].str.contains(\"oods\"), 'Vehicle' ] = 'Goods_vehicle'\n",
    "vehicle_type.loc[vehicle_type['label'].str.contains(\"scooter\"), 'Vehicle' ] = 'Mobility scooter'\n",
    "vehicle_type.loc[vehicle_type['label'].str.contains(\"Motorcycle\"), 'Vehicle' ] = 'Motorcycle'\n",
    "vehicle_type.loc[vehicle_type['label'].str.contains(\"Electric motorcycle\"), 'Vehicle' ] = 'Electric motorcycle'\n",
    "vehicle_type.loc[vehicle_type['label'].str.contains(\"Pedal cyc\"), 'Vehicle' ] = 'Pedal cycle'\n",
    "vehicle_type.loc[vehicle_type['label'].str.contains(\"other\" and \"Tram\", \"Agri\"), 'Vehicle' ] = 'Other vehicle'\n",
    "vehicle_type.loc[vehicle_type['label'].str.contains(\"horse\"), 'Vehicle' ] = 'Ridden Horse'\n",
    "\n",
    "vehicle_type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Created another set for our1st Question. Inner join on the type of vehicles\n",
    "types_of_vehicles = merge_set.join(vehicle_type, \n",
    "                                   on='Vehicle_Type', how='inner')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "types_of_vehicles = types_of_vehicles[types_of_vehicles.label != 'Data missing or out of range']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Accident_Index</th>\n",
       "      <th>Vehicle_Reference</th>\n",
       "      <th>Vehicle_Type</th>\n",
       "      <th>Skidding_and_Overturning</th>\n",
       "      <th>Hit_Object_in_Carriageway</th>\n",
       "      <th>Vehicle_Leaving_Carriageway</th>\n",
       "      <th>Hit_Object_off_Carriageway</th>\n",
       "      <th>1st_Point_of_Impact</th>\n",
       "      <th>Was_Vehicle_Left_Hand_Drive?</th>\n",
       "      <th>Journey_Purpose_of_Driver</th>\n",
       "      <th>...</th>\n",
       "      <th>Light_Conditions</th>\n",
       "      <th>Weather_Conditions</th>\n",
       "      <th>Road_Surface_Conditions</th>\n",
       "      <th>Special_Conditions_at_Site</th>\n",
       "      <th>Carriageway_Hazards</th>\n",
       "      <th>Urban_or_Rural_Area</th>\n",
       "      <th>Did_Police_Officer_Attend_Scene_of_Accident</th>\n",
       "      <th>LSOA_of_Accident_Location</th>\n",
       "      <th>label</th>\n",
       "      <th>Vehicle</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>200501BS00001</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002849</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200501BS00003</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002857</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>200501BS00004</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002840</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>200501BS00006</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002832</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>200501BS00007</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002875</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Accident_Index  Vehicle_Reference  Vehicle_Type  Skidding_and_Overturning  \\\n",
       "0  200501BS00001                  1             9                         0   \n",
       "3  200501BS00003                  2             9                         0   \n",
       "4  200501BS00004                  1             9                         0   \n",
       "6  200501BS00006                  1             9                         0   \n",
       "9  200501BS00007                  2             9                         0   \n",
       "\n",
       "   Hit_Object_in_Carriageway  Vehicle_Leaving_Carriageway  \\\n",
       "0                          0                            0   \n",
       "3                          0                            0   \n",
       "4                          0                            0   \n",
       "6                          0                            0   \n",
       "9                          0                            0   \n",
       "\n",
       "   Hit_Object_off_Carriageway  1st_Point_of_Impact  \\\n",
       "0                           0                    1   \n",
       "3                           0                    3   \n",
       "4                           0                    1   \n",
       "6                           0                    0   \n",
       "9                           0                    2   \n",
       "\n",
       "   Was_Vehicle_Left_Hand_Drive?  Journey_Purpose_of_Driver   ...     \\\n",
       "0                             1                         15   ...      \n",
       "3                             1                         15   ...      \n",
       "4                             1                         15   ...      \n",
       "6                             1                         15   ...      \n",
       "9                             1                         15   ...      \n",
       "\n",
       "   Light_Conditions  Weather_Conditions  Road_Surface_Conditions  \\\n",
       "0               1.0                 2.0                      2.0   \n",
       "3               4.0                 1.0                      1.0   \n",
       "4               1.0                 1.0                      1.0   \n",
       "6               1.0                 2.0                      2.0   \n",
       "9               4.0                 1.0                      1.0   \n",
       "\n",
       "   Special_Conditions_at_Site  Carriageway_Hazards  Urban_or_Rural_Area  \\\n",
       "0                         0.0                  0.0                  1.0   \n",
       "3                         0.0                  0.0                  1.0   \n",
       "4                         0.0                  0.0                  1.0   \n",
       "6                         6.0                  0.0                  1.0   \n",
       "9                         0.0                  0.0                  1.0   \n",
       "\n",
       "   Did_Police_Officer_Attend_Scene_of_Accident  LSOA_of_Accident_Location  \\\n",
       "0                                          1.0                  E01002849   \n",
       "3                                          1.0                  E01002857   \n",
       "4                                          1.0                  E01002840   \n",
       "6                                          1.0                  E01002832   \n",
       "9                                          1.0                  E01002875   \n",
       "\n",
       "   label  Vehicle  \n",
       "0    Car      Car  \n",
       "3    Car      Car  \n",
       "4    Car      Car  \n",
       "6    Car      Car  \n",
       "9    Car      Car  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# first couple of rows\n",
    "types_of_vehicles.head(5)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Accident_Index</th>\n",
       "      <th>Vehicle_Reference</th>\n",
       "      <th>Vehicle_Type</th>\n",
       "      <th>Skidding_and_Overturning</th>\n",
       "      <th>Hit_Object_in_Carriageway</th>\n",
       "      <th>Vehicle_Leaving_Carriageway</th>\n",
       "      <th>Hit_Object_off_Carriageway</th>\n",
       "      <th>1st_Point_of_Impact</th>\n",
       "      <th>Was_Vehicle_Left_Hand_Drive?</th>\n",
       "      <th>Journey_Purpose_of_Driver</th>\n",
       "      <th>...</th>\n",
       "      <th>Light_Conditions</th>\n",
       "      <th>Weather_Conditions</th>\n",
       "      <th>Road_Surface_Conditions</th>\n",
       "      <th>Special_Conditions_at_Site</th>\n",
       "      <th>Carriageway_Hazards</th>\n",
       "      <th>Urban_or_Rural_Area</th>\n",
       "      <th>Did_Police_Officer_Attend_Scene_of_Accident</th>\n",
       "      <th>LSOA_of_Accident_Location</th>\n",
       "      <th>label</th>\n",
       "      <th>Vehicle</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3139961</th>\n",
       "      <td>2015320011119</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>E01026109</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3143549</th>\n",
       "      <td>2015331500216</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01025719</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3182907</th>\n",
       "      <td>201543W048065</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01016403</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3193038</th>\n",
       "      <td>2015450022238</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01030430</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3237925</th>\n",
       "      <td>201560S036521</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>W01000404</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "      <td>Electric motorcycle</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Accident_Index  Vehicle_Reference  Vehicle_Type  \\\n",
       "3139961  2015320011119                  2            23   \n",
       "3143549  2015331500216                  2            23   \n",
       "3182907  201543W048065                  1            23   \n",
       "3193038  2015450022238                  1            23   \n",
       "3237925  201560S036521                  1            23   \n",
       "\n",
       "         Skidding_and_Overturning  Hit_Object_in_Carriageway  \\\n",
       "3139961                         0                          0   \n",
       "3143549                         0                          0   \n",
       "3182907                         0                          0   \n",
       "3193038                         5                          0   \n",
       "3237925                         0                          0   \n",
       "\n",
       "         Vehicle_Leaving_Carriageway  Hit_Object_off_Carriageway  \\\n",
       "3139961                            0                           0   \n",
       "3143549                            0                           0   \n",
       "3182907                            0                           0   \n",
       "3193038                            0                           0   \n",
       "3237925                            0                           0   \n",
       "\n",
       "         1st_Point_of_Impact  Was_Vehicle_Left_Hand_Drive?  \\\n",
       "3139961                    1                             1   \n",
       "3143549                    1                             1   \n",
       "3182907                    1                             1   \n",
       "3193038                    0                             1   \n",
       "3237925                    4                             1   \n",
       "\n",
       "         Journey_Purpose_of_Driver         ...           Light_Conditions  \\\n",
       "3139961                          6         ...                        1.0   \n",
       "3143549                          6         ...                        4.0   \n",
       "3182907                          6         ...                        1.0   \n",
       "3193038                          6         ...                        7.0   \n",
       "3237925                          6         ...                        1.0   \n",
       "\n",
       "         Weather_Conditions  Road_Surface_Conditions  \\\n",
       "3139961                 1.0                     -1.0   \n",
       "3143549                 6.0                      2.0   \n",
       "3182907                 1.0                      1.0   \n",
       "3193038                 1.0                      1.0   \n",
       "3237925                 1.0                      1.0   \n",
       "\n",
       "         Special_Conditions_at_Site  Carriageway_Hazards  Urban_or_Rural_Area  \\\n",
       "3139961                         0.0                  0.0                  1.0   \n",
       "3143549                         0.0                  0.0                  1.0   \n",
       "3182907                         0.0                  0.0                  1.0   \n",
       "3193038                         5.0                  0.0                  1.0   \n",
       "3237925                         0.0                  0.0                  2.0   \n",
       "\n",
       "         Did_Police_Officer_Attend_Scene_of_Accident  \\\n",
       "3139961                                          2.0   \n",
       "3143549                                          1.0   \n",
       "3182907                                          1.0   \n",
       "3193038                                          1.0   \n",
       "3237925                                          1.0   \n",
       "\n",
       "         LSOA_of_Accident_Location                label              Vehicle  \n",
       "3139961                  E01026109  Electric motorcycle  Electric motorcycle  \n",
       "3143549                  E01025719  Electric motorcycle  Electric motorcycle  \n",
       "3182907                  E01016403  Electric motorcycle  Electric motorcycle  \n",
       "3193038                  E01030430  Electric motorcycle  Electric motorcycle  \n",
       "3237925                  W01000404  Electric motorcycle  Electric motorcycle  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## last rows\n",
    "types_of_vehicles.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Checking - 6 random sample of rows\n",
    "vehicle_sample = types_of_vehicles.sample(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "vehicle_sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3261739, 51)"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#num or rows/columns in a tuple # memory usage: 1.3+ GB\n",
    "types_of_vehicles.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# calculate measures of central tendency\n",
    "#types_of_vehicles.describe()   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 3261739 entries, 0 to 3237925\n",
      "Data columns (total 51 columns):\n",
      "Accident_Index                                 object\n",
      "Vehicle_Reference                              int64\n",
      "Vehicle_Type                                   int64\n",
      "Skidding_and_Overturning                       int64\n",
      "Hit_Object_in_Carriageway                      int64\n",
      "Vehicle_Leaving_Carriageway                    int64\n",
      "Hit_Object_off_Carriageway                     int64\n",
      "1st_Point_of_Impact                            int64\n",
      "Was_Vehicle_Left_Hand_Drive?                   int64\n",
      "Journey_Purpose_of_Driver                      int64\n",
      "Sex_of_Driver                                  int64\n",
      "Age_of_Driver                                  int64\n",
      "Age_Band_of_Driver                             int64\n",
      "Engine_Capacity_(CC)                           int64\n",
      "Propulsion_Code                                int64\n",
      "Age_of_Vehicle                                 int64\n",
      "Driver_IMD_Decile                              int64\n",
      "Driver_Home_Area_Type                          int64\n",
      "Location_Easting_OSGR                          float64\n",
      "Location_Northing_OSGR                         float64\n",
      "Longitude                                      float64\n",
      "Latitude                                       float64\n",
      "Police_Force                                   float64\n",
      "Accident_Severity                              float64\n",
      "Number_of_Vehicles                             float64\n",
      "Number_of_Casualties                           float64\n",
      "Date                                           object\n",
      "Day_of_Week                                    float64\n",
      "Time                                           object\n",
      "Local_Authority_(District)                     float64\n",
      "Local_Authority_(Highway)                      object\n",
      "1st_Road_Class                                 float64\n",
      "1st_Road_Number                                float64\n",
      "Road_Type                                      float64\n",
      "Speed_limit                                    float64\n",
      "Junction_Detail                                float64\n",
      "Junction_Control                               float64\n",
      "2nd_Road_Class                                 float64\n",
      "2nd_Road_Number                                float64\n",
      "Pedestrian_Crossing-Human_Control              float64\n",
      "Pedestrian_Crossing-Physical_Facilities        float64\n",
      "Light_Conditions                               float64\n",
      "Weather_Conditions                             float64\n",
      "Road_Surface_Conditions                        float64\n",
      "Special_Conditions_at_Site                     float64\n",
      "Carriageway_Hazards                            float64\n",
      "Urban_or_Rural_Area                            float64\n",
      "Did_Police_Officer_Attend_Scene_of_Accident    float64\n",
      "LSOA_of_Accident_Location                      object\n",
      "label                                          object\n",
      "Vehicle                                        object\n",
      "dtypes: float64(27), int64(17), object(7)\n",
      "memory usage: 1.3+ GB\n"
     ]
    }
   ],
   "source": [
    "# data types and memory consumption \n",
    "types_of_vehicles.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "most_acc= types_of_vehicles.groupby(['label','Vehicle_Type'])['Accident_Severity'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "mean_acc= types_of_vehicles.groupby('label')['Accident_Severity'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "most_vehicle_accident = types_of_vehicles.groupby('label')['Accident_Severity'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "most_accidents = types_of_vehicles.groupby('Accident_Severity')['label'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Car                                      2388155\n",
       "Pedal cycle                               203523\n",
       "Van / Goods 3.5 tonnes mgw or under       152058\n",
       "Motorcycle over 500cc                      93958\n",
       "Bus or coach (17 or more pass seats)       82269\n",
       "Motorcycle 125cc and under                 79386\n",
       "Goods 7.5 tonnes mgw and over              67724\n",
       "Taxi/Private hire car                      57829\n",
       "Motorcycle 50cc and under                  39461\n",
       "Motorcycle over 125cc and up to 500cc      27873\n",
       "Other vehicle                              25591\n",
       "Goods over 3.5t. and under 7.5t            24275\n",
       "Minibus (8 - 16 passenger seats)            8885\n",
       "Agricultural vehicle                        6808\n",
       "Ridden horse                                1404\n",
       "Goods vehicle - unknown weight              1002\n",
       "Mobility scooter                             681\n",
       "Motorcycle - unknown cc                      561\n",
       "Tram                                         268\n",
       "Electric motorcycle                           28\n",
       "Name: label, dtype: int64"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "types_of_vehicles['label'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "types_of_vehicles = types_of_vehicles.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "types_of_vehicles = types_of_vehicles.join(accident_severity, \n",
    "                                           on='Accident_Severity', \n",
    "                                           how='inner')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Accident_Index</th>\n",
       "      <th>Vehicle_Reference</th>\n",
       "      <th>Vehicle_Type</th>\n",
       "      <th>Skidding_and_Overturning</th>\n",
       "      <th>Hit_Object_in_Carriageway</th>\n",
       "      <th>Vehicle_Leaving_Carriageway</th>\n",
       "      <th>Hit_Object_off_Carriageway</th>\n",
       "      <th>1st_Point_of_Impact</th>\n",
       "      <th>Was_Vehicle_Left_Hand_Drive?</th>\n",
       "      <th>Journey_Purpose_of_Driver</th>\n",
       "      <th>...</th>\n",
       "      <th>Weather_Conditions</th>\n",
       "      <th>Road_Surface_Conditions</th>\n",
       "      <th>Special_Conditions_at_Site</th>\n",
       "      <th>Carriageway_Hazards</th>\n",
       "      <th>Urban_or_Rural_Area</th>\n",
       "      <th>Did_Police_Officer_Attend_Scene_of_Accident</th>\n",
       "      <th>LSOA_of_Accident_Location</th>\n",
       "      <th>label</th>\n",
       "      <th>Vehicle</th>\n",
       "      <th>Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>200501BS00001</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002849</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>200501BS00019</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002864</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>200501BS00022</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002821</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>200501BS70066</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>E01002814</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>200501BS70088</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002867</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>200501BS70089</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002873</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>200501BS70096</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002866</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>200501BS70134</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002849</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>253</th>\n",
       "      <td>200501BS70136</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002814</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>294</th>\n",
       "      <td>200501BS70166</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002816</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>302</th>\n",
       "      <td>200501BS70170</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002852</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365</th>\n",
       "      <td>200501BS70207</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002845</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>366</th>\n",
       "      <td>200501BS70207</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002845</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>405</th>\n",
       "      <td>200501BS70232</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002828</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>470</th>\n",
       "      <td>200501BS70272</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002913</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>200501BS70277</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002902</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>482</th>\n",
       "      <td>200501BS70279</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002844</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>518</th>\n",
       "      <td>200501BS70298</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002873</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>524</th>\n",
       "      <td>200501BS70301</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002898</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>556</th>\n",
       "      <td>200501BS70322</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>E01002861</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>557</th>\n",
       "      <td>200501BS70322</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>E01002861</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597</th>\n",
       "      <td>200501BS70344</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002840</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>621</th>\n",
       "      <td>200501BS70357</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01004692</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>636</th>\n",
       "      <td>200501BS70365</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002912</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>648</th>\n",
       "      <td>200501BS70372</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002859</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>656</th>\n",
       "      <td>200501BS70376</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002869</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>657</th>\n",
       "      <td>200501BS70376</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002869</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>665</th>\n",
       "      <td>200501BS70380</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002868</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>681</th>\n",
       "      <td>200501BS70389</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002871</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>695</th>\n",
       "      <td>200501BS70399</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>E01002897</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2791666</th>\n",
       "      <td>2014051400056</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01006627</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2827641</th>\n",
       "      <td>20141319N0989</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01011199</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2833814</th>\n",
       "      <td>201414C112814</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01007767</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2840358</th>\n",
       "      <td>2014160D03881</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>E01012915</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2875712</th>\n",
       "      <td>2014320000259</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01026255</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2915396</th>\n",
       "      <td>201443P005034</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01028492</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2959268</th>\n",
       "      <td>201450CS2F001</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01020135</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3073256</th>\n",
       "      <td>2015075361905</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>E01018620</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3086328</th>\n",
       "      <td>20151322K0604</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01010623</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3146365</th>\n",
       "      <td>2015331501852</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01025806</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3162285</th>\n",
       "      <td>2015405DA1068</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01017375</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3189953</th>\n",
       "      <td>2015440330034</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01017228</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3224142</th>\n",
       "      <td>2015520501448</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01029257</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3228617</th>\n",
       "      <td>2015521507339</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01033342</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Mobility scooter</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2557021</th>\n",
       "      <td>201311SK04513</td>\n",
       "      <td>3</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01020826</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2794437</th>\n",
       "      <td>201405CC03930</td>\n",
       "      <td>1</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01006448</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2794439</th>\n",
       "      <td>201405CC03930</td>\n",
       "      <td>3</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01006448</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2880223</th>\n",
       "      <td>2014331400364</td>\n",
       "      <td>1</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01025815</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2891959</th>\n",
       "      <td>2014360081495</td>\n",
       "      <td>3</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01026424</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3062422</th>\n",
       "      <td>2015051500988</td>\n",
       "      <td>1</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01006538</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3118645</th>\n",
       "      <td>2015210025459</td>\n",
       "      <td>2</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01029440</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3118837</th>\n",
       "      <td>2015210026022</td>\n",
       "      <td>2</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01029516</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3119615</th>\n",
       "      <td>2015210028138</td>\n",
       "      <td>2</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01014291</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3127527</th>\n",
       "      <td>2015230036515</td>\n",
       "      <td>1</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01031160</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3127528</th>\n",
       "      <td>2015230036515</td>\n",
       "      <td>2</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01031160</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3127565</th>\n",
       "      <td>2015230037674</td>\n",
       "      <td>3</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01031212</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3141122</th>\n",
       "      <td>2015320051673</td>\n",
       "      <td>3</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01026209</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3238708</th>\n",
       "      <td>201560S106224</td>\n",
       "      <td>1</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>W01000112</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3243667</th>\n",
       "      <td>2015621501452</td>\n",
       "      <td>3</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>W01001885</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3243668</th>\n",
       "      <td>2015621501452</td>\n",
       "      <td>4</td>\n",
       "      <td>98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>W01001885</td>\n",
       "      <td>Goods vehicle - unknown weight</td>\n",
       "      <td>Goods_vehicle</td>\n",
       "      <td>Fatal</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3012998 rows × 52 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Accident_Index  Vehicle_Reference  Vehicle_Type  \\\n",
       "0        200501BS00001                  1             9   \n",
       "24       200501BS00019                  2             9   \n",
       "29       200501BS00022                  1             9   \n",
       "147      200501BS70066                  2             9   \n",
       "182      200501BS70088                  2             9   \n",
       "183      200501BS70089                  1             9   \n",
       "196      200501BS70096                  2             9   \n",
       "251      200501BS70134                  2             9   \n",
       "253      200501BS70136                  1             9   \n",
       "294      200501BS70166                  1             9   \n",
       "302      200501BS70170                  2             9   \n",
       "365      200501BS70207                  2             9   \n",
       "366      200501BS70207                  3             9   \n",
       "405      200501BS70232                  2             9   \n",
       "470      200501BS70272                  2             9   \n",
       "477      200501BS70277                  1             9   \n",
       "482      200501BS70279                  2             9   \n",
       "518      200501BS70298                  2             9   \n",
       "524      200501BS70301                  1             9   \n",
       "556      200501BS70322                  1             9   \n",
       "557      200501BS70322                  2             9   \n",
       "597      200501BS70344                  1             9   \n",
       "621      200501BS70357                  1             9   \n",
       "636      200501BS70365                  2             9   \n",
       "648      200501BS70372                  1             9   \n",
       "656      200501BS70376                  1             9   \n",
       "657      200501BS70376                  2             9   \n",
       "665      200501BS70380                  2             9   \n",
       "681      200501BS70389                  1             9   \n",
       "695      200501BS70399                  1             9   \n",
       "...                ...                ...           ...   \n",
       "2791666  2014051400056                  2            22   \n",
       "2827641  20141319N0989                  1            22   \n",
       "2833814  201414C112814                  2            22   \n",
       "2840358  2014160D03881                  1            22   \n",
       "2875712  2014320000259                  2            22   \n",
       "2915396  201443P005034                  2            22   \n",
       "2959268  201450CS2F001                  2            22   \n",
       "3073256  2015075361905                  2            22   \n",
       "3086328  20151322K0604                  2            22   \n",
       "3146365  2015331501852                  1            22   \n",
       "3162285  2015405DA1068                  1            22   \n",
       "3189953  2015440330034                  2            22   \n",
       "3224142  2015520501448                  2            22   \n",
       "3228617  2015521507339                  2            22   \n",
       "2557021  201311SK04513                  3            98   \n",
       "2794437  201405CC03930                  1            98   \n",
       "2794439  201405CC03930                  3            98   \n",
       "2880223  2014331400364                  1            98   \n",
       "2891959  2014360081495                  3            98   \n",
       "3062422  2015051500988                  1            98   \n",
       "3118645  2015210025459                  2            98   \n",
       "3118837  2015210026022                  2            98   \n",
       "3119615  2015210028138                  2            98   \n",
       "3127527  2015230036515                  1            98   \n",
       "3127528  2015230036515                  2            98   \n",
       "3127565  2015230037674                  3            98   \n",
       "3141122  2015320051673                  3            98   \n",
       "3238708  201560S106224                  1            98   \n",
       "3243667  2015621501452                  3            98   \n",
       "3243668  2015621501452                  4            98   \n",
       "\n",
       "         Skidding_and_Overturning  Hit_Object_in_Carriageway  \\\n",
       "0                               0                          0   \n",
       "24                              0                          0   \n",
       "29                              0                          0   \n",
       "147                             0                          0   \n",
       "182                             0                          0   \n",
       "183                             0                          0   \n",
       "196                             0                          0   \n",
       "251                             0                          0   \n",
       "253                             0                          0   \n",
       "294                             0                          0   \n",
       "302                             0                          0   \n",
       "365                             0                          0   \n",
       "366                             0                          0   \n",
       "405                             0                          0   \n",
       "470                             0                          0   \n",
       "477                             0                          0   \n",
       "482                             0                          0   \n",
       "518                             0                          0   \n",
       "524                             0                          0   \n",
       "556                             0                          0   \n",
       "557                             0                          0   \n",
       "597                             0                          0   \n",
       "621                             0                          0   \n",
       "636                             0                          0   \n",
       "648                             0                          0   \n",
       "656                             2                         10   \n",
       "657                             0                          0   \n",
       "665                             0                          0   \n",
       "681                             0                          0   \n",
       "695                             0                          0   \n",
       "...                           ...                        ...   \n",
       "2791666                         0                          0   \n",
       "2827641                         5                          0   \n",
       "2833814                         0                          0   \n",
       "2840358                         0                          0   \n",
       "2875712                         0                          0   \n",
       "2915396                         5                          0   \n",
       "2959268                         5                          0   \n",
       "3073256                         0                          0   \n",
       "3086328                         0                          0   \n",
       "3146365                         2                          0   \n",
       "3162285                         0                          0   \n",
       "3189953                         0                          0   \n",
       "3224142                         0                          0   \n",
       "3228617                         0                          0   \n",
       "2557021                         0                          0   \n",
       "2794437                         0                          0   \n",
       "2794439                         0                          0   \n",
       "2880223                         0                          0   \n",
       "2891959                         0                          0   \n",
       "3062422                         0                          0   \n",
       "3118645                         0                          0   \n",
       "3118837                         0                          0   \n",
       "3119615                         0                          0   \n",
       "3127527                         0                          0   \n",
       "3127528                         0                          0   \n",
       "3127565                         1                          0   \n",
       "3141122                         0                          0   \n",
       "3238708                         0                          0   \n",
       "3243667                         0                          0   \n",
       "3243668                         0                          0   \n",
       "\n",
       "         Vehicle_Leaving_Carriageway  Hit_Object_off_Carriageway  \\\n",
       "0                                  0                           0   \n",
       "24                                 0                           0   \n",
       "29                                 0                           0   \n",
       "147                                0                           0   \n",
       "182                                0                           0   \n",
       "183                                0                           0   \n",
       "196                                0                           0   \n",
       "251                                0                           0   \n",
       "253                                0                           0   \n",
       "294                                0                           0   \n",
       "302                                0                           0   \n",
       "365                                0                           0   \n",
       "366                                0                           0   \n",
       "405                                0                           0   \n",
       "470                                0                           0   \n",
       "477                                0                           0   \n",
       "482                                0                           0   \n",
       "518                                0                           0   \n",
       "524                                0                           0   \n",
       "556                                0                           0   \n",
       "557                                0                           0   \n",
       "597                                3                          10   \n",
       "621                                0                           0   \n",
       "636                                0                           0   \n",
       "648                                0                           0   \n",
       "656                                7                           7   \n",
       "657                                0                           0   \n",
       "665                                0                           0   \n",
       "681                                0                           0   \n",
       "695                                0                           0   \n",
       "...                              ...                         ...   \n",
       "2791666                            0                           0   \n",
       "2827641                            0                           0   \n",
       "2833814                            0                           0   \n",
       "2840358                            0                           0   \n",
       "2875712                            0                           0   \n",
       "2915396                            0                           0   \n",
       "2959268                            0                           0   \n",
       "3073256                            0                           0   \n",
       "3086328                            0                           0   \n",
       "3146365                            0                           0   \n",
       "3162285                            0                           0   \n",
       "3189953                            0                           0   \n",
       "3224142                            0                           0   \n",
       "3228617                            0                           0   \n",
       "2557021                            0                           0   \n",
       "2794437                            0                           0   \n",
       "2794439                            0                           0   \n",
       "2880223                            0                           0   \n",
       "2891959                            0                           0   \n",
       "3062422                            0                           0   \n",
       "3118645                            0                           0   \n",
       "3118837                            0                           0   \n",
       "3119615                            0                           0   \n",
       "3127527                            0                           0   \n",
       "3127528                            0                           0   \n",
       "3127565                            1                           4   \n",
       "3141122                            0                           0   \n",
       "3238708                            0                           0   \n",
       "3243667                            0                           0   \n",
       "3243668                            0                           0   \n",
       "\n",
       "         1st_Point_of_Impact  Was_Vehicle_Left_Hand_Drive?  \\\n",
       "0                          1                             1   \n",
       "24                         3                             2   \n",
       "29                         1                             1   \n",
       "147                        3                             1   \n",
       "182                        1                             1   \n",
       "183                        1                             1   \n",
       "196                        3                             1   \n",
       "251                        1                             1   \n",
       "253                        4                             1   \n",
       "294                        3                             1   \n",
       "302                        3                             1   \n",
       "365                        0                             1   \n",
       "366                        0                             1   \n",
       "405                        1                             1   \n",
       "470                        4                             1   \n",
       "477                        1                             1   \n",
       "482                        0                             1   \n",
       "518                        4                             1   \n",
       "524                        2                             1   \n",
       "556                        1                             1   \n",
       "557                        2                             1   \n",
       "597                        1                             1   \n",
       "621                        1                             1   \n",
       "636                        3                             1   \n",
       "648                        4                             1   \n",
       "656                        4                             1   \n",
       "657                        3                             1   \n",
       "665                        1                             1   \n",
       "681                        1                             1   \n",
       "695                        2                             1   \n",
       "...                      ...                           ...   \n",
       "2791666                    4                             1   \n",
       "2827641                    0                             1   \n",
       "2833814                    3                             1   \n",
       "2840358                    0                             1   \n",
       "2875712                    1                             1   \n",
       "2915396                    1                             1   \n",
       "2959268                    4                             1   \n",
       "3073256                    3                             1   \n",
       "3086328                    3                             1   \n",
       "3146365                    3                             1   \n",
       "3162285                    0                             1   \n",
       "3189953                    1                             1   \n",
       "3224142                    1                             1   \n",
       "3228617                    3                             1   \n",
       "2557021                    0                             1   \n",
       "2794437                    3                             1   \n",
       "2794439                    1                             1   \n",
       "2880223                    0                             1   \n",
       "2891959                    3                             1   \n",
       "3062422                    4                             1   \n",
       "3118645                    4                             1   \n",
       "3118837                    3                             1   \n",
       "3119615                    2                             1   \n",
       "3127527                    1                             1   \n",
       "3127528                    2                             1   \n",
       "3127565                    1                             1   \n",
       "3141122                    3                             1   \n",
       "3238708                    1                             1   \n",
       "3243667                    3                             1   \n",
       "3243668                    0                             1   \n",
       "\n",
       "         Journey_Purpose_of_Driver    ...     Weather_Conditions  \\\n",
       "0                               15    ...                    2.0   \n",
       "24                              15    ...                    1.0   \n",
       "29                              15    ...                    1.0   \n",
       "147                             15    ...                    2.0   \n",
       "182                             15    ...                    1.0   \n",
       "183                             15    ...                    1.0   \n",
       "196                             15    ...                    1.0   \n",
       "251                             15    ...                    1.0   \n",
       "253                             15    ...                    1.0   \n",
       "294                             15    ...                    1.0   \n",
       "302                             15    ...                    1.0   \n",
       "365                             15    ...                    1.0   \n",
       "366                             15    ...                    1.0   \n",
       "405                             15    ...                    1.0   \n",
       "470                             15    ...                    1.0   \n",
       "477                             15    ...                    2.0   \n",
       "482                             15    ...                    1.0   \n",
       "518                             15    ...                    1.0   \n",
       "524                             15    ...                    1.0   \n",
       "556                             15    ...                    1.0   \n",
       "557                             15    ...                    1.0   \n",
       "597                             15    ...                    1.0   \n",
       "621                             15    ...                    1.0   \n",
       "636                             15    ...                    1.0   \n",
       "648                             15    ...                    1.0   \n",
       "656                             15    ...                    1.0   \n",
       "657                             15    ...                    1.0   \n",
       "665                             15    ...                    1.0   \n",
       "681                             15    ...                    1.0   \n",
       "695                             15    ...                    1.0   \n",
       "...                            ...    ...                    ...   \n",
       "2791666                          6    ...                    1.0   \n",
       "2827641                          6    ...                    1.0   \n",
       "2833814                          6    ...                    1.0   \n",
       "2840358                          6    ...                    1.0   \n",
       "2875712                          6    ...                    1.0   \n",
       "2915396                          6    ...                    1.0   \n",
       "2959268                          6    ...                    1.0   \n",
       "3073256                          6    ...                    1.0   \n",
       "3086328                          6    ...                    1.0   \n",
       "3146365                          6    ...                    1.0   \n",
       "3162285                          6    ...                    1.0   \n",
       "3189953                          6    ...                    1.0   \n",
       "3224142                          6    ...                    1.0   \n",
       "3228617                          6    ...                    1.0   \n",
       "2557021                          1    ...                    1.0   \n",
       "2794437                          1    ...                    2.0   \n",
       "2794439                          1    ...                    2.0   \n",
       "2880223                          1    ...                    1.0   \n",
       "2891959                          1    ...                    1.0   \n",
       "3062422                          1    ...                    1.0   \n",
       "3118645                          6    ...                    2.0   \n",
       "3118837                          2    ...                    1.0   \n",
       "3119615                          1    ...                    1.0   \n",
       "3127527                          1    ...                    1.0   \n",
       "3127528                          1    ...                    1.0   \n",
       "3127565                          1    ...                    1.0   \n",
       "3141122                          1    ...                    1.0   \n",
       "3238708                          1    ...                    1.0   \n",
       "3243667                          1    ...                    1.0   \n",
       "3243668                          1    ...                    1.0   \n",
       "\n",
       "         Road_Surface_Conditions  Special_Conditions_at_Site  \\\n",
       "0                            2.0                         0.0   \n",
       "24                           1.0                         0.0   \n",
       "29                           1.0                         0.0   \n",
       "147                          2.0                         0.0   \n",
       "182                          1.0                         0.0   \n",
       "183                          1.0                         0.0   \n",
       "196                          1.0                         0.0   \n",
       "251                          1.0                         0.0   \n",
       "253                          1.0                         0.0   \n",
       "294                          1.0                         0.0   \n",
       "302                          1.0                         0.0   \n",
       "365                          1.0                         0.0   \n",
       "366                          1.0                         0.0   \n",
       "405                          1.0                         0.0   \n",
       "470                          1.0                         0.0   \n",
       "477                          2.0                         0.0   \n",
       "482                          1.0                         0.0   \n",
       "518                          1.0                         0.0   \n",
       "524                          1.0                         0.0   \n",
       "556                          1.0                         0.0   \n",
       "557                          1.0                         0.0   \n",
       "597                          1.0                         0.0   \n",
       "621                          1.0                         0.0   \n",
       "636                          1.0                         0.0   \n",
       "648                          1.0                         0.0   \n",
       "656                          1.0                         0.0   \n",
       "657                          1.0                         0.0   \n",
       "665                          1.0                         0.0   \n",
       "681                          1.0                         0.0   \n",
       "695                          1.0                         0.0   \n",
       "...                          ...                         ...   \n",
       "2791666                      1.0                         3.0   \n",
       "2827641                      1.0                         0.0   \n",
       "2833814                      1.0                         0.0   \n",
       "2840358                      1.0                         0.0   \n",
       "2875712                      1.0                         0.0   \n",
       "2915396                      1.0                         0.0   \n",
       "2959268                      1.0                         0.0   \n",
       "3073256                      1.0                         0.0   \n",
       "3086328                      1.0                         0.0   \n",
       "3146365                      1.0                         0.0   \n",
       "3162285                      1.0                         0.0   \n",
       "3189953                      1.0                         0.0   \n",
       "3224142                      2.0                         0.0   \n",
       "3228617                      1.0                         0.0   \n",
       "2557021                      1.0                         0.0   \n",
       "2794437                      2.0                         0.0   \n",
       "2794439                      2.0                         0.0   \n",
       "2880223                      1.0                         0.0   \n",
       "2891959                      1.0                         0.0   \n",
       "3062422                      1.0                         0.0   \n",
       "3118645                      2.0                         0.0   \n",
       "3118837                      1.0                         0.0   \n",
       "3119615                      2.0                         0.0   \n",
       "3127527                      2.0                         0.0   \n",
       "3127528                      2.0                         0.0   \n",
       "3127565                      1.0                         0.0   \n",
       "3141122                      1.0                         0.0   \n",
       "3238708                      1.0                         0.0   \n",
       "3243667                      1.0                         0.0   \n",
       "3243668                      1.0                         0.0   \n",
       "\n",
       "         Carriageway_Hazards  Urban_or_Rural_Area  \\\n",
       "0                        0.0                  1.0   \n",
       "24                       0.0                  1.0   \n",
       "29                       0.0                  1.0   \n",
       "147                      0.0                  1.0   \n",
       "182                      0.0                  1.0   \n",
       "183                      0.0                  1.0   \n",
       "196                      0.0                  1.0   \n",
       "251                      0.0                  1.0   \n",
       "253                      0.0                  1.0   \n",
       "294                      0.0                  1.0   \n",
       "302                      0.0                  1.0   \n",
       "365                      0.0                  1.0   \n",
       "366                      0.0                  1.0   \n",
       "405                      0.0                  1.0   \n",
       "470                      0.0                  1.0   \n",
       "477                      0.0                  1.0   \n",
       "482                      0.0                  1.0   \n",
       "518                      0.0                  1.0   \n",
       "524                      0.0                  1.0   \n",
       "556                      0.0                  1.0   \n",
       "557                      0.0                  1.0   \n",
       "597                      0.0                  1.0   \n",
       "621                      0.0                  1.0   \n",
       "636                      0.0                  1.0   \n",
       "648                      0.0                  1.0   \n",
       "656                      0.0                  1.0   \n",
       "657                      0.0                  1.0   \n",
       "665                      0.0                  1.0   \n",
       "681                      0.0                  1.0   \n",
       "695                      0.0                  1.0   \n",
       "...                      ...                  ...   \n",
       "2791666                  0.0                  1.0   \n",
       "2827641                  0.0                  2.0   \n",
       "2833814                  0.0                  1.0   \n",
       "2840358                  0.0                  1.0   \n",
       "2875712                  0.0                  2.0   \n",
       "2915396                  0.0                  1.0   \n",
       "2959268                  0.0                  2.0   \n",
       "3073256                  0.0                  1.0   \n",
       "3086328                  0.0                  1.0   \n",
       "3146365                  0.0                  1.0   \n",
       "3162285                  0.0                  1.0   \n",
       "3189953                  0.0                  2.0   \n",
       "3224142                  0.0                  1.0   \n",
       "3228617                  0.0                  1.0   \n",
       "2557021                  0.0                  2.0   \n",
       "2794437                  0.0                  2.0   \n",
       "2794439                  0.0                  2.0   \n",
       "2880223                  0.0                  2.0   \n",
       "2891959                  0.0                  2.0   \n",
       "3062422                  0.0                  1.0   \n",
       "3118645                  0.0                  2.0   \n",
       "3118837                  0.0                  2.0   \n",
       "3119615                  0.0                  1.0   \n",
       "3127527                  0.0                  2.0   \n",
       "3127528                  0.0                  2.0   \n",
       "3127565                  0.0                  2.0   \n",
       "3141122                  0.0                  2.0   \n",
       "3238708                  0.0                  2.0   \n",
       "3243667                  0.0                  1.0   \n",
       "3243668                  0.0                  1.0   \n",
       "\n",
       "         Did_Police_Officer_Attend_Scene_of_Accident  \\\n",
       "0                                                1.0   \n",
       "24                                               1.0   \n",
       "29                                               1.0   \n",
       "147                                              2.0   \n",
       "182                                              1.0   \n",
       "183                                              1.0   \n",
       "196                                              1.0   \n",
       "251                                              1.0   \n",
       "253                                              1.0   \n",
       "294                                              1.0   \n",
       "302                                              1.0   \n",
       "365                                              1.0   \n",
       "366                                              1.0   \n",
       "405                                              1.0   \n",
       "470                                              1.0   \n",
       "477                                              1.0   \n",
       "482                                              1.0   \n",
       "518                                              1.0   \n",
       "524                                              1.0   \n",
       "556                                              2.0   \n",
       "557                                              2.0   \n",
       "597                                              1.0   \n",
       "621                                              1.0   \n",
       "636                                              1.0   \n",
       "648                                              1.0   \n",
       "656                                              1.0   \n",
       "657                                              1.0   \n",
       "665                                              1.0   \n",
       "681                                              1.0   \n",
       "695                                              2.0   \n",
       "...                                              ...   \n",
       "2791666                                          1.0   \n",
       "2827641                                          1.0   \n",
       "2833814                                          1.0   \n",
       "2840358                                          2.0   \n",
       "2875712                                          1.0   \n",
       "2915396                                          1.0   \n",
       "2959268                                          1.0   \n",
       "3073256                                          2.0   \n",
       "3086328                                          1.0   \n",
       "3146365                                          1.0   \n",
       "3162285                                          1.0   \n",
       "3189953                                          1.0   \n",
       "3224142                                          1.0   \n",
       "3228617                                          1.0   \n",
       "2557021                                          1.0   \n",
       "2794437                                          1.0   \n",
       "2794439                                          1.0   \n",
       "2880223                                          1.0   \n",
       "2891959                                          1.0   \n",
       "3062422                                          1.0   \n",
       "3118645                                          1.0   \n",
       "3118837                                          1.0   \n",
       "3119615                                          1.0   \n",
       "3127527                                          1.0   \n",
       "3127528                                          1.0   \n",
       "3127565                                          1.0   \n",
       "3141122                                          1.0   \n",
       "3238708                                          1.0   \n",
       "3243667                                          1.0   \n",
       "3243668                                          1.0   \n",
       "\n",
       "         LSOA_of_Accident_Location                           label  \\\n",
       "0                        E01002849                             Car   \n",
       "24                       E01002864                             Car   \n",
       "29                       E01002821                             Car   \n",
       "147                      E01002814                             Car   \n",
       "182                      E01002867                             Car   \n",
       "183                      E01002873                             Car   \n",
       "196                      E01002866                             Car   \n",
       "251                      E01002849                             Car   \n",
       "253                      E01002814                             Car   \n",
       "294                      E01002816                             Car   \n",
       "302                      E01002852                             Car   \n",
       "365                      E01002845                             Car   \n",
       "366                      E01002845                             Car   \n",
       "405                      E01002828                             Car   \n",
       "470                      E01002913                             Car   \n",
       "477                      E01002902                             Car   \n",
       "482                      E01002844                             Car   \n",
       "518                      E01002873                             Car   \n",
       "524                      E01002898                             Car   \n",
       "556                      E01002861                             Car   \n",
       "557                      E01002861                             Car   \n",
       "597                      E01002840                             Car   \n",
       "621                      E01004692                             Car   \n",
       "636                      E01002912                             Car   \n",
       "648                      E01002859                             Car   \n",
       "656                      E01002869                             Car   \n",
       "657                      E01002869                             Car   \n",
       "665                      E01002868                             Car   \n",
       "681                      E01002871                             Car   \n",
       "695                      E01002897                             Car   \n",
       "...                            ...                             ...   \n",
       "2791666                  E01006627                Mobility scooter   \n",
       "2827641                  E01011199                Mobility scooter   \n",
       "2833814                  E01007767                Mobility scooter   \n",
       "2840358                  E01012915                Mobility scooter   \n",
       "2875712                  E01026255                Mobility scooter   \n",
       "2915396                  E01028492                Mobility scooter   \n",
       "2959268                  E01020135                Mobility scooter   \n",
       "3073256                  E01018620                Mobility scooter   \n",
       "3086328                  E01010623                Mobility scooter   \n",
       "3146365                  E01025806                Mobility scooter   \n",
       "3162285                  E01017375                Mobility scooter   \n",
       "3189953                  E01017228                Mobility scooter   \n",
       "3224142                  E01029257                Mobility scooter   \n",
       "3228617                  E01033342                Mobility scooter   \n",
       "2557021                  E01020826  Goods vehicle - unknown weight   \n",
       "2794437                  E01006448  Goods vehicle - unknown weight   \n",
       "2794439                  E01006448  Goods vehicle - unknown weight   \n",
       "2880223                  E01025815  Goods vehicle - unknown weight   \n",
       "2891959                  E01026424  Goods vehicle - unknown weight   \n",
       "3062422                  E01006538  Goods vehicle - unknown weight   \n",
       "3118645                  E01029440  Goods vehicle - unknown weight   \n",
       "3118837                  E01029516  Goods vehicle - unknown weight   \n",
       "3119615                  E01014291  Goods vehicle - unknown weight   \n",
       "3127527                  E01031160  Goods vehicle - unknown weight   \n",
       "3127528                  E01031160  Goods vehicle - unknown weight   \n",
       "3127565                  E01031212  Goods vehicle - unknown weight   \n",
       "3141122                  E01026209  Goods vehicle - unknown weight   \n",
       "3238708                  W01000112  Goods vehicle - unknown weight   \n",
       "3243667                  W01001885  Goods vehicle - unknown weight   \n",
       "3243668                  W01001885  Goods vehicle - unknown weight   \n",
       "\n",
       "                  Vehicle  Category  \n",
       "0                     Car   Serious  \n",
       "24                    Car   Serious  \n",
       "29                    Car   Serious  \n",
       "147                   Car   Serious  \n",
       "182                   Car   Serious  \n",
       "183                   Car   Serious  \n",
       "196                   Car   Serious  \n",
       "251                   Car   Serious  \n",
       "253                   Car   Serious  \n",
       "294                   Car   Serious  \n",
       "302                   Car   Serious  \n",
       "365                   Car   Serious  \n",
       "366                   Car   Serious  \n",
       "405                   Car   Serious  \n",
       "470                   Car   Serious  \n",
       "477                   Car   Serious  \n",
       "482                   Car   Serious  \n",
       "518                   Car   Serious  \n",
       "524                   Car   Serious  \n",
       "556                   Car   Serious  \n",
       "557                   Car   Serious  \n",
       "597                   Car   Serious  \n",
       "621                   Car   Serious  \n",
       "636                   Car   Serious  \n",
       "648                   Car   Serious  \n",
       "656                   Car   Serious  \n",
       "657                   Car   Serious  \n",
       "665                   Car   Serious  \n",
       "681                   Car   Serious  \n",
       "695                   Car   Serious  \n",
       "...                   ...       ...  \n",
       "2791666  Mobility scooter     Fatal  \n",
       "2827641  Mobility scooter     Fatal  \n",
       "2833814  Mobility scooter     Fatal  \n",
       "2840358  Mobility scooter     Fatal  \n",
       "2875712  Mobility scooter     Fatal  \n",
       "2915396  Mobility scooter     Fatal  \n",
       "2959268  Mobility scooter     Fatal  \n",
       "3073256  Mobility scooter     Fatal  \n",
       "3086328  Mobility scooter     Fatal  \n",
       "3146365  Mobility scooter     Fatal  \n",
       "3162285  Mobility scooter     Fatal  \n",
       "3189953  Mobility scooter     Fatal  \n",
       "3224142  Mobility scooter     Fatal  \n",
       "3228617  Mobility scooter     Fatal  \n",
       "2557021     Goods_vehicle     Fatal  \n",
       "2794437     Goods_vehicle     Fatal  \n",
       "2794439     Goods_vehicle     Fatal  \n",
       "2880223     Goods_vehicle     Fatal  \n",
       "2891959     Goods_vehicle     Fatal  \n",
       "3062422     Goods_vehicle     Fatal  \n",
       "3118645     Goods_vehicle     Fatal  \n",
       "3118837     Goods_vehicle     Fatal  \n",
       "3119615     Goods_vehicle     Fatal  \n",
       "3127527     Goods_vehicle     Fatal  \n",
       "3127528     Goods_vehicle     Fatal  \n",
       "3127565     Goods_vehicle     Fatal  \n",
       "3141122     Goods_vehicle     Fatal  \n",
       "3238708     Goods_vehicle     Fatal  \n",
       "3243667     Goods_vehicle     Fatal  \n",
       "3243668     Goods_vehicle     Fatal  \n",
       "\n",
       "[3012998 rows x 52 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "types_of_vehicles\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "label                                  Accident_Severity\n",
       "Agricultural vehicle                   3.0                     4588\n",
       "                                       2.0                     1172\n",
       "                                       1.0                      237\n",
       "Bus or coach (17 or more pass seats)   3.0                    65320\n",
       "                                       2.0                     8345\n",
       "                                       1.0                      830\n",
       "Car                                    3.0                  1964612\n",
       "                                       2.0                   235748\n",
       "                                       1.0                    23033\n",
       "Electric motorcycle                    3.0                       18\n",
       "                                       2.0                        8\n",
       "Goods 7.5 tonnes mgw and over          3.0                    51166\n",
       "                                       2.0                     9169\n",
       "                                       1.0                     2865\n",
       "Goods over 3.5t. and under 7.5t        3.0                    18934\n",
       "                                       2.0                     2802\n",
       "                                       1.0                      534\n",
       "Goods vehicle - unknown weight         3.0                      806\n",
       "                                       2.0                      122\n",
       "                                       1.0                       16\n",
       "Minibus (8 - 16 passenger seats)       3.0                     6925\n",
       "                                       2.0                     1063\n",
       "                                       1.0                      145\n",
       "Mobility scooter                       3.0                      498\n",
       "                                       2.0                      132\n",
       "                                       1.0                       20\n",
       "Motorcycle - unknown cc                3.0                      369\n",
       "                                       2.0                      144\n",
       "                                       1.0                        7\n",
       "Motorcycle 125cc and under             3.0                    59881\n",
       "                                       2.0                    16164\n",
       "                                       1.0                      668\n",
       "Motorcycle 50cc and under              3.0                    31691\n",
       "                                       2.0                     6560\n",
       "                                       1.0                      156\n",
       "Motorcycle over 125cc and up to 500cc  3.0                    18320\n",
       "                                       2.0                     6576\n",
       "                                       1.0                      482\n",
       "Motorcycle over 500cc                  3.0                    56600\n",
       "                                       2.0                    28592\n",
       "                                       1.0                     3592\n",
       "Other vehicle                          3.0                    18857\n",
       "                                       2.0                     3179\n",
       "                                       1.0                      438\n",
       "Pedal cycle                            3.0                   161328\n",
       "                                       2.0                    30808\n",
       "                                       1.0                     1322\n",
       "Ridden horse                           3.0                     1041\n",
       "                                       2.0                      281\n",
       "                                       1.0                       23\n",
       "Taxi/Private hire car                  3.0                    46826\n",
       "                                       2.0                     6163\n",
       "                                       1.0                      458\n",
       "Tram                                   3.0                      206\n",
       "                                       2.0                       48\n",
       "                                       1.0                        9\n",
       "Van / Goods 3.5 tonnes mgw or under    3.0                   122740\n",
       "                                       2.0                    16823\n",
       "                                       1.0                     2009\n",
       "Name: Accident_Severity, dtype: int64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#number of accident and most severe per vehicle\n",
    "most_vehicle_accident"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x4320 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mostaccidents = types_of_vehicles.groupby(\n",
    "    ['Category','Vehicle'])['Vehicle_Reference'].count()\n",
    "\n",
    "#mostaccidents = pd.merge(mostaccidents, accident_severity, on='label', how='outer')\n",
    "\n",
    "#accidents_plt = mostaccidents.unstack('Accident_Severity').loc[:, 3]\n",
    "accidents_plt = mostaccidents.unstack('Category')\n",
    "accidents_plt.plot(kind='barh', stacked=True,colormap='Paired',figsize=(30,60), fontsize=30)\n",
    "plt.savefig('output.png', dpi=600, bbox_inches='tight')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Category  Vehicle            \n",
       "Fatal     Bus                        975\n",
       "          Car                      23491\n",
       "          Goods_vehicle             5424\n",
       "          Mobility scooter            20\n",
       "          Motorcycle                4905\n",
       "          Other vehicle                9\n",
       "          Pedal cycle               1322\n",
       "          Ridden Horse                23\n",
       "Serious   Bus                       9408\n",
       "          Car                     241911\n",
       "          Electric motorcycle          8\n",
       "          Goods_vehicle            28916\n",
       "          Mobility scooter           132\n",
       "          Motorcycle               58036\n",
       "          Other vehicle               48\n",
       "          Pedal cycle              30808\n",
       "          Ridden Horse               281\n",
       "Slight    Bus                      72245\n",
       "          Car                    2011438\n",
       "          Electric motorcycle         18\n",
       "          Goods_vehicle           193646\n",
       "          Mobility scooter           498\n",
       "          Motorcycle              166861\n",
       "          Other vehicle              206\n",
       "          Pedal cycle             161328\n",
       "          Ridden Horse              1041\n",
       "Name: Vehicle_Reference, dtype: int64"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mostaccidents['Fatal'].plot(x=['label'])\n",
    "mostaccidents"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Category</th>\n",
       "      <th>Fatal</th>\n",
       "      <th>Serious</th>\n",
       "      <th>Slight</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>label</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Bus or coach (17 or more pass seats)</th>\n",
       "      <td>830.0</td>\n",
       "      <td>8345.0</td>\n",
       "      <td>65320.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Car</th>\n",
       "      <td>23033.0</td>\n",
       "      <td>235748.0</td>\n",
       "      <td>1964612.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Electric motorcycle</th>\n",
       "      <td>NaN</td>\n",
       "      <td>8.0</td>\n",
       "      <td>18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Goods 7.5 tonnes mgw and over</th>\n",
       "      <td>2865.0</td>\n",
       "      <td>9169.0</td>\n",
       "      <td>51166.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Goods over 3.5t. and under 7.5t</th>\n",
       "      <td>534.0</td>\n",
       "      <td>2802.0</td>\n",
       "      <td>18934.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Goods vehicle - unknown weight</th>\n",
       "      <td>16.0</td>\n",
       "      <td>122.0</td>\n",
       "      <td>806.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Minibus (8 - 16 passenger seats)</th>\n",
       "      <td>145.0</td>\n",
       "      <td>1063.0</td>\n",
       "      <td>6925.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mobility scooter</th>\n",
       "      <td>20.0</td>\n",
       "      <td>132.0</td>\n",
       "      <td>498.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Motorcycle - unknown cc</th>\n",
       "      <td>7.0</td>\n",
       "      <td>144.0</td>\n",
       "      <td>369.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Motorcycle 125cc and under</th>\n",
       "      <td>668.0</td>\n",
       "      <td>16164.0</td>\n",
       "      <td>59881.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Motorcycle 50cc and under</th>\n",
       "      <td>156.0</td>\n",
       "      <td>6560.0</td>\n",
       "      <td>31691.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Motorcycle over 125cc and up to 500cc</th>\n",
       "      <td>482.0</td>\n",
       "      <td>6576.0</td>\n",
       "      <td>18320.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Motorcycle over 500cc</th>\n",
       "      <td>3592.0</td>\n",
       "      <td>28592.0</td>\n",
       "      <td>56600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pedal cycle</th>\n",
       "      <td>1322.0</td>\n",
       "      <td>30808.0</td>\n",
       "      <td>161328.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ridden horse</th>\n",
       "      <td>23.0</td>\n",
       "      <td>281.0</td>\n",
       "      <td>1041.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Taxi/Private hire car</th>\n",
       "      <td>458.0</td>\n",
       "      <td>6163.0</td>\n",
       "      <td>46826.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tram</th>\n",
       "      <td>9.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>206.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Van / Goods 3.5 tonnes mgw or under</th>\n",
       "      <td>2009.0</td>\n",
       "      <td>16823.0</td>\n",
       "      <td>122740.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Category                                 Fatal   Serious     Slight\n",
       "label                                                              \n",
       "Bus or coach (17 or more pass seats)     830.0    8345.0    65320.0\n",
       "Car                                    23033.0  235748.0  1964612.0\n",
       "Electric motorcycle                        NaN       8.0       18.0\n",
       "Goods 7.5 tonnes mgw and over           2865.0    9169.0    51166.0\n",
       "Goods over 3.5t. and under 7.5t          534.0    2802.0    18934.0\n",
       "Goods vehicle - unknown weight            16.0     122.0      806.0\n",
       "Minibus (8 - 16 passenger seats)         145.0    1063.0     6925.0\n",
       "Mobility scooter                          20.0     132.0      498.0\n",
       "Motorcycle - unknown cc                    7.0     144.0      369.0\n",
       "Motorcycle 125cc and under               668.0   16164.0    59881.0\n",
       "Motorcycle 50cc and under                156.0    6560.0    31691.0\n",
       "Motorcycle over 125cc and up to 500cc    482.0    6576.0    18320.0\n",
       "Motorcycle over 500cc                   3592.0   28592.0    56600.0\n",
       "Pedal cycle                             1322.0   30808.0   161328.0\n",
       "Ridden horse                              23.0     281.0     1041.0\n",
       "Taxi/Private hire car                    458.0    6163.0    46826.0\n",
       "Tram                                       9.0      48.0      206.0\n",
       "Van / Goods 3.5 tonnes mgw or under     2009.0   16823.0   122740.0"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accidents_plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Most Accidents categorize on severety with 3 as worst \n",
    "#most_acc = pd.DataFrame(most_accidents)\n",
    "#most_acc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Accident_Index</th>\n",
       "      <th>Vehicle_Reference</th>\n",
       "      <th>Casualty_Reference</th>\n",
       "      <th>Casualty_Class</th>\n",
       "      <th>Sex_of_Casualty</th>\n",
       "      <th>Age_of_Casualty</th>\n",
       "      <th>Age_Band_of_Casualty</th>\n",
       "      <th>Casualty_Severity</th>\n",
       "      <th>Pedestrian_Location</th>\n",
       "      <th>Pedestrian_Movement</th>\n",
       "      <th>Car_Passenger</th>\n",
       "      <th>Bus_or_Coach_Passenger</th>\n",
       "      <th>Pedestrian_Road_Maintenance_Worker</th>\n",
       "      <th>Casualty_Type</th>\n",
       "      <th>Casualty_Home_Area_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>200501BS00001</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>200501BS00002</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>-1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>200501BS00003</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Accident_Index  Vehicle_Reference  Casualty_Reference  Casualty_Class  \\\n",
       "0  200501BS00001                  1                   1               3   \n",
       "1  200501BS00002                  1                   1               2   \n",
       "2  200501BS00003                  2                   1               1   \n",
       "\n",
       "   Sex_of_Casualty  Age_of_Casualty  Age_Band_of_Casualty  Casualty_Severity  \\\n",
       "0                1               37                     7                  2   \n",
       "1                1               37                     7                  3   \n",
       "2                1               62                     9                  3   \n",
       "\n",
       "   Pedestrian_Location  Pedestrian_Movement  Car_Passenger  \\\n",
       "0                    1                    1              0   \n",
       "1                    0                    0              0   \n",
       "2                    0                    0              0   \n",
       "\n",
       "   Bus_or_Coach_Passenger  Pedestrian_Road_Maintenance_Worker  Casualty_Type  \\\n",
       "0                       0                                  -1              0   \n",
       "1                       4                                  -1             11   \n",
       "2                       0                                  -1              9   \n",
       "\n",
       "   Casualty_Home_Area_Type  \n",
       "0                        1  \n",
       "1                        1  \n",
       "2                        1  "
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "casualties.head(3)\n",
    "casualties = casualties.dropna(axis=0, how='all')\n",
    "#casualties = casualties.drop(columns=['extra'])\n",
    "casualties.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.series.Series'>\n"
     ]
    }
   ],
   "source": [
    "print(type(types_of_vehicles.Day_of_Week))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "# day of week file to join\n",
    "days_of_week = pd.read_csv(context_files[15])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "days_of_week = days_of_week.set_index('code')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(days_of_week)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "days_of_week = days_of_week.rename(columns={'label': 'Days'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "part_of_days = types_of_vehicles.join(\n",
    "    days_of_week, on='Day_of_Week', how='inner')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Accident_Index</th>\n",
       "      <th>Vehicle_Reference</th>\n",
       "      <th>Vehicle_Type</th>\n",
       "      <th>Skidding_and_Overturning</th>\n",
       "      <th>Hit_Object_in_Carriageway</th>\n",
       "      <th>Vehicle_Leaving_Carriageway</th>\n",
       "      <th>Hit_Object_off_Carriageway</th>\n",
       "      <th>1st_Point_of_Impact</th>\n",
       "      <th>Was_Vehicle_Left_Hand_Drive?</th>\n",
       "      <th>Journey_Purpose_of_Driver</th>\n",
       "      <th>...</th>\n",
       "      <th>Road_Surface_Conditions</th>\n",
       "      <th>Special_Conditions_at_Site</th>\n",
       "      <th>Carriageway_Hazards</th>\n",
       "      <th>Urban_or_Rural_Area</th>\n",
       "      <th>Did_Police_Officer_Attend_Scene_of_Accident</th>\n",
       "      <th>LSOA_of_Accident_Location</th>\n",
       "      <th>label</th>\n",
       "      <th>Vehicle</th>\n",
       "      <th>Category</th>\n",
       "      <th>Days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>200501BS00001</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002849</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>200501BS70066</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>E01002814</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>200501BS70088</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002867</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>780</th>\n",
       "      <td>200501BS70450</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>E01002835</td>\n",
       "      <td>Car</td>\n",
       "      <td>Car</td>\n",
       "      <td>Serious</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4 rows × 53 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Accident_Index  Vehicle_Reference  Vehicle_Type  Skidding_and_Overturning  \\\n",
       "0    200501BS00001                  1             9                         0   \n",
       "147  200501BS70066                  2             9                         0   \n",
       "182  200501BS70088                  2             9                         0   \n",
       "780  200501BS70450                  2             9                         0   \n",
       "\n",
       "     Hit_Object_in_Carriageway  Vehicle_Leaving_Carriageway  \\\n",
       "0                            0                            0   \n",
       "147                          0                            0   \n",
       "182                          0                            0   \n",
       "780                          0                            0   \n",
       "\n",
       "     Hit_Object_off_Carriageway  1st_Point_of_Impact  \\\n",
       "0                             0                    1   \n",
       "147                           0                    3   \n",
       "182                           0                    1   \n",
       "780                           0                    0   \n",
       "\n",
       "     Was_Vehicle_Left_Hand_Drive?  Journey_Purpose_of_Driver   ...     \\\n",
       "0                               1                         15   ...      \n",
       "147                             1                         15   ...      \n",
       "182                             1                         15   ...      \n",
       "780                             1                         15   ...      \n",
       "\n",
       "     Road_Surface_Conditions  Special_Conditions_at_Site  Carriageway_Hazards  \\\n",
       "0                        2.0                         0.0                  0.0   \n",
       "147                      2.0                         0.0                  0.0   \n",
       "182                      1.0                         0.0                  0.0   \n",
       "780                      1.0                         0.0                  0.0   \n",
       "\n",
       "     Urban_or_Rural_Area  Did_Police_Officer_Attend_Scene_of_Accident  \\\n",
       "0                    1.0                                          1.0   \n",
       "147                  1.0                                          2.0   \n",
       "182                  1.0                                          1.0   \n",
       "780                  1.0                                          1.0   \n",
       "\n",
       "     LSOA_of_Accident_Location  label  Vehicle  Category     Days  \n",
       "0                    E01002849    Car      Car   Serious  Tuesday  \n",
       "147                  E01002814    Car      Car   Serious  Tuesday  \n",
       "182                  E01002867    Car      Car   Serious  Tuesday  \n",
       "780                  E01002835    Car      Car   Serious  Tuesday  \n",
       "\n",
       "[4 rows x 53 columns]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "part_of_days.head(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Created another set for our1st Question. Inner join on the type of vehicles\n",
    "#set = part_of_days.join(casualties, on='Vehicle_Reference', how='inner')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Data set main for now\n",
    "part_days = part_of_days.loc[:,['Days','label','Number_of_Vehicles' ,'Accident_Severity','Number_of_Casualties','Date','Time']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "part_days = part_days.rename(columns={'label':'Vehicle_Type'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Days</th>\n",
       "      <th>Friday</th>\n",
       "      <th>Monday</th>\n",
       "      <th>Saturday</th>\n",
       "      <th>Sunday</th>\n",
       "      <th>Thursday</th>\n",
       "      <th>Tuesday</th>\n",
       "      <th>Wednesday</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fatal</th>\n",
       "      <td>5573</td>\n",
       "      <td>4774</td>\n",
       "      <td>5892</td>\n",
       "      <td>5607</td>\n",
       "      <td>4840</td>\n",
       "      <td>4785</td>\n",
       "      <td>4698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Serious</th>\n",
       "      <td>59296</td>\n",
       "      <td>50090</td>\n",
       "      <td>52520</td>\n",
       "      <td>46792</td>\n",
       "      <td>54285</td>\n",
       "      <td>53361</td>\n",
       "      <td>53204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Slight</th>\n",
       "      <td>432173</td>\n",
       "      <td>375727</td>\n",
       "      <td>332942</td>\n",
       "      <td>268961</td>\n",
       "      <td>397913</td>\n",
       "      <td>398264</td>\n",
       "      <td>401301</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Days      Friday  Monday  Saturday  Sunday  Thursday  Tuesday  Wednesday\n",
       "Category                                                                \n",
       "Fatal       5573    4774      5892    5607      4840     4785       4698\n",
       "Serious    59296   50090     52520   46792     54285    53361      53204\n",
       "Slight    432173  375727    332942  268961    397913   398264     401301"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accidents_perday = part_of_days.groupby('Days')['Category'].value_counts()\n",
    "type(accidents_perday)\n",
    "apd = accidents_perday.unstack('Days')\n",
    "apd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1080 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "apd.mean().plot(kind='bar', stacked=True,colormap='Paired',figsize=(20,15), fontsize=30)\n",
    "plt.savefig('bars.png', dpi=600, bbox_inches='tight')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Is there a particular day of the week and time with a higher number of accidents? (Monday after 5 vs Friday after 5)\n",
    "#part_of_days = part_of_days.groupby('Days')['Time'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "type(part_of_days)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#part_of_days"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(part_days)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "part_days.set_index('Date').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dayOf = part_days.groupby(['Date','Days','Time'])['Accident_Severity'].sum()\n",
    "dayOf = part_days.groupby(['Date','Days'])['Accident_Severity'].count()\n",
    "dayOf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dayOf_plt = dayOf.unstack('Accident_Severity')\n",
    "d =dayOf.unstack('Days')\n",
    "\n",
    "d.head(3)\n",
    "#dayOf_plt.plot()\n",
    "#d.fillna(d.mean()).plot(kind='line')\n",
    "doi = dayOf.index\n",
    "dov = dayOf.values\n",
    "\n",
    "d.cumsum()\n",
    "#plt.figure(); d.plot()\n",
    "#d.plot.bar(stacked=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Does higher amount of horsepower correlate to higher risk of accidents?\n",
    "\n",
    "risk_of_accidents = types_of_vehicles"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop all rows on where the vehicle type does not refrences a value that is equivalent a moving vehicle \n",
    "risk_of_accidents = risk_of_accidents[risk_of_accidents.Vehicle_Type != -1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents = risk_of_accidents.loc[:,['label','Engine_Capacity_(CC)','Accident_Severity']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents = risk_of_accidents.rename(columns={'label':'Vehicle_Type', 'Engine_Capacity_(CC)':'Engine_Capacity'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents = risk_of_accidents[risk_of_accidents.Engine_Capacity != -1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents = risk_of_accidents.set_index('Vehicle_Type')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents['Accident_Severity'].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#risk_of_accidents = risk_of_accidents.set_index('Vehicle_Type')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "high_risk_of_accidents = risk_of_accidents[risk_of_accidents['Accident_Severity']==3]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop all rows that the index is not equal to a moving vehicle \n",
    "#risk_of_accidents = risk_of_accidents.drop(\n",
    "#    ['Pedal cycle','Ridden horse',\n",
    "#     'Mobility scooter','Data missing or out of range'], axis=0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "high_risk_of_accidents.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents['Accident_Severity'\n",
    "                      ].corr(risk_of_accidents\n",
    "                             ['Engine_Capacity'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "risk_of_accidents"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "\"['Location_Easting_OSGR' 'Location_Northing_OSGR' 'Longitude' 'Latitude'] not found in axis\"",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-109-3a38790037ae>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0maccidentswcasualties\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0maccidentswcasualties\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Location_Easting_OSGR'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'Location_Northing_OSGR'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'Longitude'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'Latitude'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   3695\u001b[0m                                            \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3696\u001b[0m                                            \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3697\u001b[0;31m                                            errors=errors)\n\u001b[0m\u001b[1;32m   3698\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3699\u001b[0m     @rewrite_axis_style_signature('mapper', [('copy', True),\n",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   3109\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3110\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3111\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3112\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3113\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors)\u001b[0m\n\u001b[1;32m   3141\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3142\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3143\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3144\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0maxis_name\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnew_axis\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3145\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.5/site-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   4402\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m'ignore'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4403\u001b[0m                 raise KeyError(\n\u001b[0;32m-> 4404\u001b[0;31m                     '{} not found in axis'.format(labels[mask]))\n\u001b[0m\u001b[1;32m   4405\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4406\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyError\u001b[0m: \"['Location_Easting_OSGR' 'Location_Northing_OSGR' 'Longitude' 'Latitude'] not found in axis\""
     ]
    }
   ],
   "source": [
    "accidentswcasualties= accidentswcasualties.drop(['Location_Easting_OSGR','Location_Northing_OSGR','Longitude','Latitude'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#risk_of_accidents['Accident_Severity'].corr(risk_of_accidents['Engine_Capacity'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#risk_of_accidents.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#How does age and sex affect risk of accident and severity? (could bin ages to inexperienced, moderately experienced, experienced, senior citizen)\n",
    "\n",
    "#Do bigger vehicles correlate to higher rate of casualties/severity? (Are motorcycles/mopeds more dangerous?)\n",
    "\n",
    "#Does purpose of trip affectt risk of accident?\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
